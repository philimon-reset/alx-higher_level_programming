>>> matrix = __import__("2-matrix_divided").matrix_divided
>>> temp = [
...             [1, 2, 3], ["A", 2, 5]
... ]
>>> matrix_divided(temp, 5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 23, in matrix_divided
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> temp = [
...             [1, 2, 3], [4, 2, 5]
... ]
>>> matrix_divided(temp, 5)
[[0.2, 0.4, 0.6], [0.8, 0.4, 1.0]]
>>> matrix_divided(temp, "a")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 9, in matrix_divided
TypeError: div must be a number
>>> matrix_divided(temp, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 11, in matrix_divided
ZeroDivisionError: division by Zero
>>> temp = [
...             [1, 2, 3], [4, 2, 5], [1]
... ]
>>> matrix_divided(temp, 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 17, in matrix_divided
TypeError: Each row of the matrix must have the same size
>>> temp = [
...             [1, 2, 3], [4, 2, 5], []
... ]
>>> matrix_divided(temp, 4)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 17, in matrix_divided
TypeError: Each row of the matrix must have the same size
