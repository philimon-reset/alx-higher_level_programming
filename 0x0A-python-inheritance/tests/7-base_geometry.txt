>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)

>>> bg = BaseGeometry()
>>> bg.integer_validator("biggy", 10000000)

>>> bg = BaseGeometry()
>>> bg.integer_validator()
...
TypeError: integer_validator() missing 2 required positional argument: 'name' and 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator("width", 89)

>>> bg = BaseGeometry()
>>> bg.integer_validator("width")
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "John")
...
TypeError: name must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", True)
...
TypeError: age must be greater than 0

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 1.2)
...
TypeError: age must be greater than 0


>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
...
TypeError: age must be greater than 0


>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [1,2,3])
Traceback (most recent call last):
TypeError: age must be an integer


>>> bg = BaseGeometry()
>>> bg.integer_validator("age", ())
...
TypeError: age must be an integer


>>> bg = BaseGeometry()
>>> bg.integer_validator("not", [1,2,3])
...
TypeError: not must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [])
...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", (2,3,5))
...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
...
TypeError: age must be an integer

>>> bg = BaseGeometry()
>>> bg.area()
...
Exception: area() is not implemented

>>> bg = BaseGeometry()
>>> bg.integer_validator("distance", -4)
...
ValueError: distance must be greater than 0
